@if (visible)
{
    <div class="relative z-[100]" aria-labelledby="modal-title" role="dialog" aria-modal="true">
        <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity"></div>
        <div class="fixed inset-0 z-60 w-screen overflow-y-auto">
            <div class="flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0">
                <div class="relative transform overflow-hidden rounded-lg bg-white text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg">
                    <div class="bg-white border border-gray-200 rounded-xl shadow-sm pointer-events-auto">
                        <div class="p-4 sm:p-7">
                            @if (Closable)
                            {
                                <div class="absolute top-2 end-2">
                                    <button type="button" class="flex justify-center items-center w-7 h-7 text-sm font-semibold rounded-lg border border-transparent text-gray-800 hover:bg-gray-100 disabled:opacity-50 disabled:pointer-events-none" @onclick="Close">
                                        <span class="sr-only">Close</span>
                                        <svg class="flex-shrink-0 w-4 h-4" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M18 6 6 18" /><path d="m6 6 12 12" /></svg>
                                    </button>
                                </div>
                            }

                            @ChildContent
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public bool visible { get; set; } = false;
    [Parameter] public EventCallback Closed { get; set; }
    [Parameter] public RenderFragment ChildContent { get; set; }
    [Parameter] public bool Closable { get; set; } = true;

    private async Task Close() => await Closed.InvokeAsync();
}
